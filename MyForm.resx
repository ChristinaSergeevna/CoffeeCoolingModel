<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>